<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mapper.ProductSalePropertyKeyMapper">

    <resultMap id="salePropertyMap" type="com.atguigu.entity.ProductSalePropertyKey" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="salePropertyValueList" ofType="com.atguigu.entity.ProductSalePropertyValue" autoMapping="true">
            <id property="id" column="property_value_id"/>
        </collection>
    </resultMap>

    <select id="querySalePropertyByProductId" resultMap="salePropertyMap">
        select
            a.id,
            a.product_id,
            a.sale_property_key_id,
            a.sale_property_key_name,
            b.id property_value_id,
            b.sale_property_value_name
        from product_sale_property_key a
                 inner join product_sale_property_value b
                            on a.product_id = b.product_id
                                and a.sale_property_key_id = b.sale_property_key_id
        where a.product_id = #{productId}
    </select>

    <select id="getSpuSalePropertyList" resultMap="salePropertyMap">
        SELECT
            a.id,
            a.sale_property_key_name,
            b.id property_value_id,
            b.sale_property_value_name,
            if(c.id is null , '0', '1') is_selected
        FROM
            product_sale_property_key a
                INNER JOIN product_sale_property_value b ON a.product_id = b.product_id
                AND a.sale_property_key_id = b.sale_property_key_id
                LEFT JOIN sku_sale_property_value c ON c.sale_property_value_id = b.id
                AND c.sku_id = #{skuId}
        WHERE
            a.product_id = #{productId}
        ORDER BY
            a.sale_property_key_id,
            b.id
    </select>
</mapper>
