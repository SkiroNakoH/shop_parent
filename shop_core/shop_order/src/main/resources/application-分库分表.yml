server:
  port: 8004

mybatis-plus:
  mapper-locations: classpath:com/atguigu/mapper/xml/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
feign:
  sentinel:
    enabled: true
  client:
    config:
      default:
        readTimeout: 3000
        connectTimeout: 1000
spring:
  application:
    name: shop-order
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.21.128:8848
  rabbitmq:
    host: 192.168.21.128
    port: 5672
    username: admin
    password: 123
    listener:
      simple:
        acknowledge-mode: manual
  redis:
    host: 192.168.21.128
    port: 6389
    database: 0
    timeout: 1800000
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://192.168.21.128:3306/shop_order?characterEncoding=utf-8&useSSL=false
#    username: root
#    password: root
  shardingsphere:
    datasource:
      names: ds-1,ds-2,ds-3
      ds-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.21.128:3316/db_order?characterEncoding=utf-8&useSSL=false
        username: root
        password: 123
      ds-2:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.21.128:3316/db_order?characterEncoding=utf-8&useSSL=false
        username: root
        password: 123
      ds-3:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.21.128:3316/db_order?characterEncoding=utf-8&useSSL=false
        username: root
        password: 123
    #分库分表策略
    rules:
      sharding:
        default-database-strategy:
          standard:
            sharding-column: user_id
            sharding-algorithm-name: sharding-db-by-user-id
        #具体算法表达式
        sharding-algorithms:
          sharding-db-by-user-id:
            type: INLINE
            props:
              algorithm-expression: ds-$->{user_id%3+1}
          sharding-table-order-by-user-id:
            type: INLINE
            props:
              algorithm-expression: t_order_$->{user_id%4+1}
          sharding-table-order-detail-by-user-id:
            type: INLINE
            props:
              algorithm-expression: t_order_detail_$->{user_id%4+1}
        tables:
          t_order:
            actual-data-nodes: ds-$->{1..3}.t_order_$->{1..4}
            #分表策略
            table-strategy:
              standard:
                sharding-algorithm-name: sharding-table-order-by-user-id
                sharding-column: user_id
          t_order_detail:
            actual-data-nodes: ds-$->{1..3}.t_order_detail_$->{1..4}
            #分表策略
            table-strategy:
              standard:
                sharding-algorithm-name: sharding-table-order-detail-by-user-id
                sharding-column: user_id
        binding-tables:
          - t_order,t_order_detail


    #打印sql
    props:
      sql-show: true


  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
cancel:
  order:
    delay: 300000000
